{"version":3,"file":"stripe-angular.js","sources":["../../src/StripeTypes.ts","../../src/StripeScriptTag.ts","../src/components/StripeComponent.ts","../src/components/StripeSource.component.ts","../src/components/StripeCard.component.ts","../src/components/StripeBank.component.ts","../../src/index.ts","../../src/stripe-angular.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\n\nexport const STRIPE_PUBLISHABLE_KEY = new InjectionToken<string>('Stripe Publishable Key')\nexport const STRIPE_OPTIONS = new InjectionToken<stripe.StripeOptions>('Stripe Options')\n\nexport interface Stripe{\n  (string:string,options?:stripe.StripeOptions):stripe.Stripe\n}\n\nexport interface BankAccountTokenOptions extends stripe.BankAccountTokenOptions {\n  metadata?:Record<string, string>;\n}","import { DOCUMENT } from '@angular/common'\nimport { Injectable, Inject } from \"@angular/core\"\n\nimport {\n  Stripe, STRIPE_PUBLISHABLE_KEY, STRIPE_OPTIONS\n  //, StripeCard, StripeToken\n} from \"./StripeTypes\"\n\n@Injectable({providedIn: 'root'}) export class StripeScriptTag {\n  src:string = \"https://js.stripe.com/v3/\"\n  Stripe!:Stripe//set at runtime\n  StripeInstance!:stripe.Stripe\n  load:Promise<any>\n  window: any\n\n  constructor(\n    @Inject(DOCUMENT) private document: any,\n    @Inject(STRIPE_PUBLISHABLE_KEY) key?: string,\n    @Inject(STRIPE_OPTIONS) options?: stripe.StripeOptions,\n  ){\n    this.window = this.document.defaultView;\n    this.load = this.injectIntoHead()\n    if (key) this.setPublishableKey(key, options)\n  }\n\n  promiseStripe():Promise<Stripe>{\n    return this.load\n  }\n\n  promiseInstance():Promise<stripe.Stripe>{\n    return this.promiseStripe()\n    .then(stripe=>{\n      if( !this.StripeInstance ){\n        const err = new Error(\"Stripe PublishableKey NOT SET. Use method StripeScriptTag.setPublishableKey()\")\n        err[\"code\"] = \"STRIPEKEYNOTSET\"\n        throw err\n        //return Promise.reject( err )\n      }\n\n      return this.StripeInstance\n    })\n  }\n\n  setPublishableKey(\n    key:string,\n    options?:stripe.StripeOptions\n  ):Promise<stripe.Stripe>{\n    return this.load.then( ()=>\n      this.StripeInstance = this.Stripe(key, options)\n    )\n  }\n\n  injectIntoHead():Promise<Stripe>{\n    if( this.window && this.window[\"Stripe\"] ){\n      return Promise.resolve( this.Stripe = this.window[\"Stripe\"] as any )\n    }\n\n    return new Promise((res,rej)=>{\n      const head = this.getTargetTagDropElement()\n      const script = this.document.createElement(\"script\")\n      script.setAttribute(\"src\", this.src)\n      script.setAttribute(\"type\", \"text/javascript\")\n\n      script.addEventListener(\"load\",()=>{\n        this.Stripe = this.grabStripe()\n        res( this.Stripe )\n      })\n\n      head.appendChild(script)\n    })\n  }\n\n  grabStripe(): Stripe {\n    return window[\"Stripe\"] as any;\n  }\n\n  getTargetTagDropElement(){\n    let elm = this.document.getElementsByTagName(\"head\")\n\n    if(elm.length)return elm[0]\n\n    return this.document.getElementsByTagName(\"body\")[0]\n  }\n}\n","import {\n  Input, Output, EventEmitter, Component\n} from \"@angular/core\"\nimport { StripeScriptTag } from \"../StripeScriptTag\"\n\n@Component({\n  selector: \"stripe-component\", template: ``\n})\nexport class StripeComponent{\n  @Output(\"catch\") catcher:EventEmitter<stripe.Error> = new EventEmitter()\n\n  @Input() invalid?:stripe.Error\n  @Output() invalidChange:EventEmitter<stripe.Error> = new EventEmitter()\n\n  stripe!:stripe.Stripe\n\n  constructor(\n    public StripeScriptTag:StripeScriptTag\n  ){}\n\n  ngOnInit(){\n    this.init()\n  }\n\n  init():Promise<stripe.Stripe>{\n    return this.StripeScriptTag.promiseInstance()\n    .then( i=>this.stripe=i )\n  }\n}","import {\n  Input, Output, EventEmitter, Component\n} from \"@angular/core\"\nimport { StripeScriptTag } from \"../StripeScriptTag\"\nimport { StripeComponent } from \"./StripeComponent\"\n\n@Component({\n  selector: \"stripe-source\",\n  template: `\n      <ng-container *ngIf=\"!StripeScriptTag.StripeInstance\">\n          <div style=\"color:red;\">Stripe PublishableKey NOT SET. Use method StripeScriptTag.setPublishableKey()</div>\n      </ng-container>\n  `,\n  exportAs:\"StripeSource\"\n}) export class StripeSource extends StripeComponent{\n  @Input() source?: stripe.Source\n  @Output() sourceChange:EventEmitter<stripe.Source> = new EventEmitter()\n\n  @Input() paymentMethod?: stripe.paymentMethod.PaymentMethod\n  @Output() paymentMethodChange:EventEmitter<stripe.paymentMethod.PaymentMethod> = new EventEmitter()\n\n  elements:any // For card, its the UI element\n\n  constructor(\n    public StripeScriptTag:StripeScriptTag\n  ){\n    super(StripeScriptTag)\n  }\n\n  createSource(\n    extraData:{ owner?: stripe.OwnerInfo, metadata?: any}\n  ):Promise<stripe.Source | void>{\n    delete this.invalid;\n    this.invalidChange.emit(this.invalid)\n\n    return this.stripe.createSource(\n      this.elements, extraData\n    )\n    .then((result:any)=>this.processSourceResult(result))\n  }\n\n  processSourceResult(\n    result: stripe.SourceResponse\n  ): stripe.Source | void {\n    if(result.error){\n      const rError = result.error\n      if( (rError as any).type === \"validation_error\" ){\n        this.invalidChange.emit( this.invalid = rError )\n      }else{\n        this.catcher.emit(rError);\n        throw rError;\n      }\n    }\n\n    const source = result.source;\n\n    if (source) {\n      this.sourceChange.emit(this.source=source);\n      return source;\n    }\n  }\n\n  createPaymentMethod(\n    extraData:{ owner?: stripe.OwnerInfo, metadata?: any}\n  ):Promise<stripe.paymentMethod.PaymentMethod | void>{\n    delete this.invalid;\n    this.invalidChange.emit(this.invalid)\n\n    return this.stripe.createPaymentMethod(\n      'card', this.elements, extraData\n    )\n    .then((result:any)=>this.processPaymentMethodResult(result))\n  }\n\n  processPaymentMethodResult(\n    result: stripe.PaymentMethodResponse\n  ): stripe.paymentMethod.PaymentMethod | void {\n    if(result.error){\n      const rError = result.error\n      if( (rError as any).type === \"validation_error\" ){\n        this.invalidChange.emit( this.invalid = rError )\n      }else{\n        this.catcher.emit(rError);\n        throw rError;\n      }\n    }\n\n    const paymentMethod = result.paymentMethod;\n\n    if (paymentMethod) {\n      this.paymentMethodChange.emit(this.paymentMethod=paymentMethod);\n      return paymentMethod;\n    }\n  }\n}\n","import {\n  ElementRef, Input, Output, EventEmitter, Component } from \"@angular/core\"\nimport { StripeScriptTag } from \"../StripeScriptTag\"\nimport { StripeSource } from \"./StripeSource.component\"\n\n@Component({\n  selector: \"stripe-card\",\n  template: `\n      <ng-container *ngIf=\"!StripeScriptTag.StripeInstance\">\n          <div style=\"color:red;\">Stripe PublishableKey NOT SET. Use method StripeScriptTag.setPublishableKey()</div>\n      </ng-container>\n  `,\n  exportAs:\"StripeCard\"\n}) export class StripeCard extends StripeSource {\n  @Input() createOptions!:stripe.elements.ElementsCreateOptions\n  @Input() options!:stripe.elements.ElementsOptions\n\n  @Input() token!: stripe.Token\n  @Output() tokenChange:EventEmitter<stripe.Token> = new EventEmitter()\n\n  @Output() cardMounted:EventEmitter<any> = new EventEmitter()\n\n  @Input() complete: boolean = false\n  @Output() completeChange:EventEmitter<boolean> = new EventEmitter()\n\n  @Output() changed:EventEmitter<ICardChangeEvent> = new EventEmitter()\n\n  drawn = false\n\n  constructor(\n    public ElementRef:ElementRef,\n    public StripeScriptTag:StripeScriptTag\n  ){\n    super(StripeScriptTag)\n  }\n\n  ngOnInit(){\n    super.init().then(()=>this.redraw())\n  }\n\n  ngOnChanges( changes:any ){\n    if (this.drawn && (changes.options || changes.createOptions)) {\n      this.redraw();\n    }\n  }\n\n  redraw() {\n    if (this.drawn) {\n      this.elements.unmount();\n      this.elements.destroy();\n    }\n    this.elements = this.stripe.elements(this.createOptions).create('card', this.options)\n    this.elements.mount(this.ElementRef.nativeElement)\n\n    this.cardMounted.emit(this.elements);\n    this.elements.on('change', (result: any)=>{\n      this.changed.emit(result)\n      if (result.complete || (this.complete && !result.complete)) {\n        this.completeChange.emit(this.complete = result.complete);\n      }\n    });\n\n    this.elements.addEventListener('change', (result:any)=>{\n      if( result.error ){\n        this.invalidChange.emit( this.invalid=result.error )\n      }\n    })\n\n    this.drawn = true;\n  }\n\n  createToken(\n    extraData?:any\n  ):Promise<stripe.Token>{\n    delete this.invalid\n    this.invalidChange.emit(this.invalid)\n\n    return this.stripe.createToken(this.elements, extraData)\n    .then((result:any)=>{\n      if(result.error){\n        if( result.error.type==\"validation_error\" ){\n          this.invalidChange.emit( this.invalid=result.error )\n        }else{\n          this.catcher.emit(result.error)\n          throw result.error\n        }\n      }else{\n        this.tokenChange.emit(this.token=result.token)\n        return result.token\n      }\n    })\n  }\n}\n\ninterface ICardChangeEvent {\n  \"elementType\": string\n  error?: {\n    \"code\": string\n    \"type\": string\n    \"message\": string\n  },\n  \"value\": {\n    \"postalCode\": string\n  },\n  \"empty\": boolean,\n  \"complete\": boolean,\n  \"brand\": string\n}\n","import {\n  Input, Output, EventEmitter, Component\n} from \"@angular/core\"\nimport { StripeComponent } from \"./StripeComponent\"\nimport { StripeScriptTag } from \"../StripeScriptTag\"\n\n@Component({\n  selector: \"stripe-bank\",\n  template: `\n      <ng-container *ngIf=\"!StripeScriptTag.StripeInstance\">\n          <div style=\"color:red;\">Stripe PublishableKey NOT SET. Use method StripeScriptTag.setPublishableKey()</div>\n      </ng-container>\n  `,\n  exportAs:\"StripeBank\"\n}) export class StripeBank extends StripeComponent{\n  @Input() options!: stripe.elements.ElementOptions // very similar type to card options\n\n  @Input() token!: stripe.Token\n  @Output() tokenChange:EventEmitter<stripe.Token> = new EventEmitter()\n\n  constructor(\n    public StripeScriptTag:StripeScriptTag\n  ){\n    super(StripeScriptTag)\n  }\n\n  createToken( data: stripe.BankAccountTokenOptions):Promise<stripe.Token>{\n    delete this.invalid\n    this.invalidChange.emit(this.invalid)\n\n    return this.stripe.createToken('bank_account', data)\n    .then((result: any) => { // TokenResponse\n      if(result.error){\n        if( result.error.type==\"validation_error\" ){\n          this.invalidChange.emit( this.invalid=result.error )\n        }else{\n          this.catcher.emit(result.error)\n          throw result.error\n        }\n      }else{\n        this.tokenChange.emit(this.token=result.token)\n        return result.token\n      }\n    });\n  }\n\n  /* createSource */\n}\n","export * from \"./StripeTypes\"\n\nimport { NgModule, ModuleWithProviders } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { STRIPE_OPTIONS, STRIPE_PUBLISHABLE_KEY } from './StripeTypes'\nimport { StripeComponent } from \"./components/StripeComponent\"\n\nimport { StripeScriptTag } from \"./StripeScriptTag\"\nexport { StripeScriptTag } from \"./StripeScriptTag\"\n\nimport { StripeSource } from \"./components/StripeSource.component\"\nexport { StripeSource } from \"./components/StripeSource.component\"\n\nimport { StripeCard } from \"./components/StripeCard.component\"\nexport { StripeCard } from \"./components/StripeCard.component\"\n\nimport { StripeBank } from \"./components/StripeBank.component\"\nexport { StripeBank } from \"./components/StripeBank.component\"\n\nconst declarations = [\n  StripeComponent, // ignore do not use (has to be here for extends purposes)\n  StripeSource,\n  StripeCard,\n  StripeBank\n]\n\n@NgModule({\n  imports:[\n    CommonModule\n  ],\n  declarations,\n // providers: [ StripeScriptTag ],\n  exports:[ ...declarations ]\n}) export class StripeModule {\n  static forRoot(publishableKey?: string, options?: stripe.StripeOptions): ModuleWithProviders<StripeModule> {\n    return {\n      ngModule: StripeModule,\n      providers: [\n        StripeScriptTag,\n        {\n          provide: STRIPE_PUBLISHABLE_KEY,\n          useValue: publishableKey\n        },\n        {\n          provide: STRIPE_OPTIONS,\n          useValue: options\n        }\n      ],\n    }\n  }\n}\n\n/**\n * @deprecated Please import `StripeModule` directly\n */\nexport const Module = StripeModule\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {StripeComponent as ɵa} from './components/StripeComponent';"],"names":[],"mappings":"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"}